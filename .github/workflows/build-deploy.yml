name: Build and Deploy to Artifactory

on:
  push:
    branches:
      - main
      - master

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run Tests with Code Coverage
        run: mvn verify --batch-mode

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn clean package --batch-mode

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v2
        with:
          version: 'latest'

      - name: Configure JFrog CLI
        run: |
          jf config add my-server \
            --url="${{ secrets.ARTIFACTORY_URL }}" \
            --user="${{ secrets.ARTIFACTORY_USER }}" \
            --password="${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}" \
            --interactive=false

      - name: Upload artifact to Artifactory
        run: |
          jf rt u "target/demo-spring-boot-*.jar" "springapp" --server-id=my-server

      - name: Upload JAR to S3
        run: |
          aws s3 cp target/demo-spring-boot-*.jar s3://spring-app-artifactory/JFrog_Artifacts/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}